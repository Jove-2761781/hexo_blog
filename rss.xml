<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Hexo</title>
        <subtitle>subtitle</subtitle>
        <icon>https://jove-2761781.github.io/blog/images/favicon.ico</icon>
        <link>https://jove-2761781.github.io/blog</link>
        <author>
          <name>Jove</name>
        </author>
        <description>个人博客</description>
        <language>zh-CN</language>
        <pubDate>Mon, 06 Feb 2023 16:21:51 +0800</pubDate>
        <lastBuildDate>Mon, 06 Feb 2023 16:21:51 +0800</lastBuildDate>
        <category term="关键词1" />
        <category term="关键词2" />
        <item>
            <guid isPermalink="true">https://jove-2761781.github.io/blog/docker/image%20for%20mysql/</guid>
            <title></title>
            <link>https://jove-2761781.github.io/blog/docker/image%20for%20mysql/</link>
            <pubDate>Mon, 06 Feb 2023 16:21:51 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;image-for-mysql&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image-for-mysql&#34;&gt;#&lt;/a&gt; Image for MySQL&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;example:&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; run &lt;span class=&#34;token parameter variable&#34;&gt;-d&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--name&lt;/span&gt; mysql_wiki &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token parameter variable&#34;&gt;-v&lt;/span&gt; /home/jove/mysql/wiki/data:/var/lib/mysql &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token parameter variable&#34;&gt;-v&lt;/span&gt; /home/jove/mysql/wiki/conf:/etc/mysql/conf.d &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token parameter variable&#34;&gt;-e&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;wiki@123 &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token parameter variable&#34;&gt;-e&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;&lt;span class=&#34;token environment constant&#34;&gt;LANG&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;C.UTF-8 &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3306&lt;/span&gt;:3306 &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;mysql:latest&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;how-to-use-this-image&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#how-to-use-this-image&#34;&gt;#&lt;/a&gt; How to use this image&lt;/h1&gt;
&lt;h2 id=&#34;start-a-mysql-server-instance&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#start-a-mysql-server-instance&#34;&gt;#&lt;/a&gt; Start a  &lt;code&gt;mysql&lt;/code&gt;  server instance&lt;/h2&gt;
&lt;p&gt;Starting a MySQL instance is simple:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;... where  &lt;code&gt;some-mysql&lt;/code&gt;  is the name you want to assign to your container,  &lt;code&gt;my-secret-pw&lt;/code&gt;  is the password to be set for the MySQL root user and  &lt;code&gt;tag&lt;/code&gt;  is the tag specifying the MySQL version you want. See the list above for relevant tags.&lt;/p&gt;
&lt;h2 id=&#34;connect-to-mysql-from-the-mysql-command-line-client&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#connect-to-mysql-from-the-mysql-command-line-client&#34;&gt;#&lt;/a&gt; Connect to MySQL from the MySQL command line client&lt;/h2&gt;
&lt;p&gt;The following command starts another  &lt;code&gt;mysql&lt;/code&gt;  container instance and runs the  &lt;code&gt;mysql&lt;/code&gt;  command line client against your original  &lt;code&gt;mysql&lt;/code&gt;  container, allowing you to execute SQL statements against your database instance:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -it --network some-network --rm mysql mysql -hsome-mysql -uexample-user -p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;... where  &lt;code&gt;some-mysql&lt;/code&gt;  is the name of your original  &lt;code&gt;mysql&lt;/code&gt;  container (connected to the  &lt;code&gt;some-network&lt;/code&gt;  Docker network).&lt;/p&gt;
&lt;p&gt;This image can also be used as a client for non-Docker or remote instances:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -it --rm mysql mysql -hsome.mysql.host -usome-mysql-user -p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More information about the MySQL command line client can be found in the &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2Rldi5teXNxbC5jb20vZG9jL2VuL215c3FsLmh0bWw=&#34;&gt;MySQL documentation&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;via-docker-stack-deploy-or-docker-compose&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#via-docker-stack-deploy-or-docker-compose&#34;&gt;#&lt;/a&gt; via &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/stack_deploy/&#34;&gt; &lt;code&gt;docker stack deploy&lt;/code&gt; &lt;/a&gt; or &lt;a href=&#34;https://github.com/docker/compose&#34;&gt; &lt;code&gt;docker-compose&lt;/code&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Example  &lt;code&gt;stack.yml&lt;/code&gt;  for  &lt;code&gt;mysql&lt;/code&gt; :&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;figcaption data-lang=&#34;YAML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Use root/example as user/password credentials&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;3.1&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; mysql&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# NOTE: use of &#34;mysql_native_password&#34; is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# (this is just an example, not intended to be a production configuration)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;default&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;authentication&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;plugin=mysql_native_password&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;restart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; always&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; example&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;adminer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; adminer&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;restart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; always&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; 8080&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8080&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Run  &lt;code&gt;docker stack deploy -c stack.yml mysql&lt;/code&gt;  (or  &lt;code&gt;docker-compose -f stack.yml up&lt;/code&gt; ), wait for it to initialize completely, and visit  &lt;code&gt;http://swarm-ip:8080&lt;/code&gt; ,  &lt;code&gt;http://localhost:8080&lt;/code&gt; , or  &lt;code&gt;http://host-ip:8080&lt;/code&gt;  (as appropriate).&lt;/p&gt;
&lt;h2 id=&#34;container-shell-access-and-viewing-mysql-logs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#container-shell-access-and-viewing-mysql-logs&#34;&gt;#&lt;/a&gt; Container shell access and viewing MySQL logs&lt;/h2&gt;
&lt;p&gt;The  &lt;code&gt;docker exec&lt;/code&gt;  command allows you to run commands inside a Docker container. The following command line will give you a bash shell inside your  &lt;code&gt;mysql&lt;/code&gt;  container:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker exec -it some-mysql bash
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The log is available through Docker&#39;s container log:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker logs some-mysql
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;using-a-custom-mysql-configuration-file&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#using-a-custom-mysql-configuration-file&#34;&gt;#&lt;/a&gt; Using a custom MySQL configuration file&lt;/h2&gt;
&lt;p&gt;The default configuration for MySQL can be found in  &lt;code&gt;/etc/mysql/my.cnf&lt;/code&gt; , which may  &lt;code&gt;!includedir&lt;/code&gt;  additional directories such as  &lt;code&gt;/etc/mysql/conf.d&lt;/code&gt;  or  &lt;code&gt;/etc/mysql/mysql.conf.d&lt;/code&gt; . Please inspect the relevant files and directories within the  &lt;code&gt;mysql&lt;/code&gt;  image itself for more details.&lt;/p&gt;
&lt;p&gt;If  &lt;code&gt;/my/custom/config-file.cnf&lt;/code&gt;  is the path and name of your custom configuration file, you can start your  &lt;code&gt;mysql&lt;/code&gt;  container like this (note that only the directory path of the custom config file is used in this command):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name some-mysql -v /my/custom:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will start a new container  &lt;code&gt;some-mysql&lt;/code&gt;  where the MySQL instance uses the combined startup settings from  &lt;code&gt;/etc/mysql/my.cnf&lt;/code&gt;  and  &lt;code&gt;/etc/mysql/conf.d/config-file.cnf&lt;/code&gt; , with settings from the latter taking precedence.&lt;/p&gt;
&lt;h3 id=&#34;configuration-without-a-cnf-file&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#configuration-without-a-cnf-file&#34;&gt;#&lt;/a&gt; Configuration without a  &lt;code&gt;cnf&lt;/code&gt;  file&lt;/h3&gt;
&lt;p&gt;Many configuration options can be passed as flags to  &lt;code&gt;mysqld&lt;/code&gt; . This will give you the flexibility to customize the container without needing a  &lt;code&gt;cnf&lt;/code&gt;  file. For example, if you want to change the default encoding and collation for all tables to use UTF-8 ( &lt;code&gt;utf8mb4&lt;/code&gt; ) just run the following:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you would like to see a complete list of available options, just run:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -it --rm mysql:tag --verbose --help
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;environment-variables&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#environment-variables&#34;&gt;#&lt;/a&gt; Environment Variables&lt;/h2&gt;
&lt;p&gt;When you start the  &lt;code&gt;mysql&lt;/code&gt;  image, you can adjust the configuration of the MySQL instance by passing one or more environment variables on the  &lt;code&gt;docker run&lt;/code&gt;  command line. Do note that none of the variables below will have any effect if you start the container with a data directory that already contains a database: any pre-existing database will always be left untouched on container startup.&lt;/p&gt;
&lt;p&gt;See also &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vNS43L2VuL2Vudmlyb25tZW50LXZhcmlhYmxlcy5odG1s&#34;&gt;MySQL :: MySQL 5.7 Reference Manual :: 4.9 Environment Variables&lt;/span&gt; for documentation of environment variables which MySQL itself respects (especially variables like  &lt;code&gt;MYSQL_HOST&lt;/code&gt; , which is known to cause issues when used with this image).&lt;/p&gt;
&lt;h3 id=&#34;mysql_root_password&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql_root_password&#34;&gt;#&lt;/a&gt;  &lt;code&gt;MYSQL_ROOT_PASSWORD&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;This variable is mandatory and specifies the password that will be set for the MySQL  &lt;code&gt;root&lt;/code&gt;  superuser account. In the above example, it was set to  &lt;code&gt;my-secret-pw&lt;/code&gt; .&lt;/p&gt;
&lt;h3 id=&#34;mysql_database&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql_database&#34;&gt;#&lt;/a&gt;  &lt;code&gt;MYSQL_DATABASE&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;This variable is optional and allows you to specify the name of a database to be created on image startup. If a user/password was supplied (see below) then that user will be granted superuser access (&lt;a href=&#34;http://dev.mysql.com/doc/en/adding-users.html&#34;&gt;corresponding to  &lt;code&gt;GRANT ALL&lt;/code&gt; &lt;/a&gt;) to this database.&lt;/p&gt;
&lt;h3 id=&#34;mysql_user-mysql_password&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql_user-mysql_password&#34;&gt;#&lt;/a&gt;  &lt;code&gt;MYSQL_USER&lt;/code&gt; ,  &lt;code&gt;MYSQL_PASSWORD&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;These variables are optional, used in conjunction to create a new user and to set that user&#39;s password. This user will be granted superuser permissions (see above) for the database specified by the  &lt;code&gt;MYSQL_DATABASE&lt;/code&gt;  variable. Both variables are required for a user to be created.&lt;/p&gt;
&lt;p&gt;Do note that there is no need to use this mechanism to create the root superuser, that user gets created by default with the password specified by the  &lt;code&gt;MYSQL_ROOT_PASSWORD&lt;/code&gt;  variable.&lt;/p&gt;
&lt;h3 id=&#34;mysql_allow_empty_password&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql_allow_empty_password&#34;&gt;#&lt;/a&gt;  &lt;code&gt;MYSQL_ALLOW_EMPTY_PASSWORD&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;This is an optional variable. Set to a non-empty value, like  &lt;code&gt;yes&lt;/code&gt; , to allow the container to be started with a blank password for the root user. &lt;em&gt;NOTE&lt;/em&gt;: Setting this variable to  &lt;code&gt;yes&lt;/code&gt;  is not recommended unless you really know what you are doing, since this will leave your MySQL instance completely unprotected, allowing anyone to gain complete superuser access.&lt;/p&gt;
&lt;h3 id=&#34;mysql_random_root_password&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql_random_root_password&#34;&gt;#&lt;/a&gt;  &lt;code&gt;MYSQL_RANDOM_ROOT_PASSWORD&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;This is an optional variable. Set to a non-empty value, like  &lt;code&gt;yes&lt;/code&gt; , to generate a random initial password for the root user (using  &lt;code&gt;pwgen&lt;/code&gt; ). The generated root password will be printed to stdout ( &lt;code&gt;GENERATED ROOT PASSWORD: .....&lt;/code&gt; ).&lt;/p&gt;
&lt;h3 id=&#34;mysql_onetime_password&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql_onetime_password&#34;&gt;#&lt;/a&gt;  &lt;code&gt;MYSQL_ONETIME_PASSWORD&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Sets root (&lt;em&gt;not&lt;/em&gt; the user specified in  &lt;code&gt;MYSQL_USER&lt;/code&gt; !) user as expired once init is complete, forcing a password change on first login. Any non-empty value will activate this setting. &lt;em&gt;NOTE&lt;/em&gt;: This feature is supported on MySQL 5.6+ only. Using this option on MySQL 5.5 will throw an appropriate error during initialization.&lt;/p&gt;
&lt;h3 id=&#34;mysql_initdb_skip_tzinfo&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql_initdb_skip_tzinfo&#34;&gt;#&lt;/a&gt;  &lt;code&gt;MYSQL_INITDB_SKIP_TZINFO&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;By default, the entrypoint script automatically loads the timezone data needed for the  &lt;code&gt;CONVERT_TZ()&lt;/code&gt;  function. If it is not needed, any non-empty value disables timezone loading.&lt;/p&gt;
&lt;h2 id=&#34;docker-secrets&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#docker-secrets&#34;&gt;#&lt;/a&gt; Docker Secrets&lt;/h2&gt;
&lt;p&gt;As an alternative to passing sensitive information via environment variables,  &lt;code&gt;_FILE&lt;/code&gt;  may be appended to the previously listed environment variables, causing the initialization script to load the values for those variables from files present in the container. In particular, this can be used to load passwords from Docker secrets stored in  &lt;code&gt;/run/secrets/&amp;lt;secret_name&amp;gt;&lt;/code&gt;  files. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name some-mysql -e MYSQL_ROOT_PASSWORD_FILE=/run/secrets/mysql-root -d mysql:tag
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Currently, this is only supported for  &lt;code&gt;MYSQL_ROOT_PASSWORD&lt;/code&gt; ,  &lt;code&gt;MYSQL_ROOT_HOST&lt;/code&gt; ,  &lt;code&gt;MYSQL_DATABASE&lt;/code&gt; ,  &lt;code&gt;MYSQL_USER&lt;/code&gt; , and  &lt;code&gt;MYSQL_PASSWORD&lt;/code&gt; .&lt;/p&gt;
&lt;h1 id=&#34;initializing-a-fresh-instance&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#initializing-a-fresh-instance&#34;&gt;#&lt;/a&gt; Initializing a fresh instance&lt;/h1&gt;
&lt;p&gt;When a container is started for the first time, a new database with the specified name will be created and initialized with the provided configuration variables. Furthermore, it will execute files with extensions  &lt;code&gt;.sh&lt;/code&gt; ,  &lt;code&gt;.sql&lt;/code&gt;  and  &lt;code&gt;.sql.gz&lt;/code&gt;  that are found in  &lt;code&gt;/docker-entrypoint-initdb.d&lt;/code&gt; . Files will be executed in alphabetical order. You can easily populate your  &lt;code&gt;mysql&lt;/code&gt;  services by &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vZW5naW5lL3R1dG9yaWFscy9kb2NrZXJ2b2x1bWVzLyNtb3VudC1hLWhvc3QtZmlsZS1hcy1hLWRhdGEtdm9sdW1l&#34;&gt;mounting a SQL dump into that directory&lt;/span&gt; and provide &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vcmVmZXJlbmNlL2J1aWxkZXIv&#34;&gt;custom images&lt;/span&gt; with contributed data. SQL files will be imported by default to the database specified by the  &lt;code&gt;MYSQL_DATABASE&lt;/code&gt;  variable.&lt;/p&gt;
&lt;h1 id=&#34;caveats&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#caveats&#34;&gt;#&lt;/a&gt; Caveats&lt;/h1&gt;
&lt;h2 id=&#34;where-to-store-data&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#where-to-store-data&#34;&gt;#&lt;/a&gt; Where to Store Data&lt;/h2&gt;
&lt;p&gt;Important note: There are several ways to store data used by applications that run in Docker containers. We encourage users of the  &lt;code&gt;mysql&lt;/code&gt;  images to familiarize themselves with the options available, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Let Docker manage the storage of your database data &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vZW5naW5lL3R1dG9yaWFscy9kb2NrZXJ2b2x1bWVzLyNhZGRpbmctYS1kYXRhLXZvbHVtZQ==&#34;&gt;by writing the database files to disk on the host system using its own internal volume management&lt;/span&gt;. This is the default and is easy and fairly transparent to the user. The downside is that the files may be hard to locate for tools and applications that run directly on the host system, i.e. outside containers.&lt;/li&gt;
&lt;li&gt;Create a data directory on the host system (outside the container) and &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vZW5naW5lL3R1dG9yaWFscy9kb2NrZXJ2b2x1bWVzLyNtb3VudC1hLWhvc3QtZGlyZWN0b3J5LWFzLWEtZGF0YS12b2x1bWU=&#34;&gt;mount this to a directory visible from inside the container&lt;/span&gt;. This places the database files in a known location on the host system, and makes it easy for tools and applications on the host system to access the files. The downside is that the user needs to make sure that the directory exists, and that e.g. directory permissions and other security mechanisms on the host system are set up correctly.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Docker documentation is a good starting point for understanding the different storage options and variations, and there are multiple blogs and forum postings that discuss and give advice in this area. We will simply show the basic procedure here for the latter option above:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a data directory on a suitable volume on your host system, e.g.  &lt;code&gt;/my/own/datadir&lt;/code&gt; .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start your  &lt;code&gt;mysql&lt;/code&gt;  container like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name some-mysql -v /my/own/datadir:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The  &lt;code&gt;-v /my/own/datadir:/var/lib/mysql&lt;/code&gt;  part of the command mounts the  &lt;code&gt;/my/own/datadir&lt;/code&gt;  directory from the underlying host system as  &lt;code&gt;/var/lib/mysql&lt;/code&gt;  inside the container, where MySQL by default will write its data files.&lt;/p&gt;
&lt;h2 id=&#34;no-connections-until-mysql-init-completes&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#no-connections-until-mysql-init-completes&#34;&gt;#&lt;/a&gt; No connections until MySQL init completes&lt;/h2&gt;
&lt;p&gt;If there is no database initialized when the container starts, then a default database will be created. While this is the expected behavior, this means that it will not accept incoming connections until such initialization completes. This may cause issues when using automation tools, such as  &lt;code&gt;docker-compose&lt;/code&gt; , which start several containers simultaneously.&lt;/p&gt;
&lt;p&gt;If the application you&#39;re trying to connect to MySQL does not handle MySQL downtime or waiting for MySQL to start gracefully, then putting a connect-retry loop before the service starts might be necessary. For an example of such an implementation in the official images, see &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3dvcmRwcmVzcy9ibG9iLzFiNDhiNGJjY2Q3YWRiMGY3ZWExNDMxYzdiNDcwYTQwZTE4NmYzZGEvZG9ja2VyLWVudHJ5cG9pbnQuc2gjTDE5NS1MMjM1&#34;&gt;WordPress&lt;/span&gt; or &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L2RvY3MvYmxvYi85NjYwYTBjY2NiODdkOGRiODQyZjMzYmMwNTc4ZDc2OWNhYWYzYmE5L2Jvbml0YS9zdGFjay55bWwjTDI4LUw0NA==&#34;&gt;Bonita&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&#34;usage-against-an-existing-database&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#usage-against-an-existing-database&#34;&gt;#&lt;/a&gt; Usage against an existing database&lt;/h2&gt;
&lt;p&gt;If you start your  &lt;code&gt;mysql&lt;/code&gt;  container instance with a data directory that already contains a database (specifically, a  &lt;code&gt;mysql&lt;/code&gt;  subdirectory), the  &lt;code&gt;$MYSQL_ROOT_PASSWORD&lt;/code&gt;  variable should be omitted from the run command line; it will in any case be ignored, and the pre-existing database will not be changed in any way.&lt;/p&gt;
&lt;h2 id=&#34;running-as-an-arbitrary-user&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#running-as-an-arbitrary-user&#34;&gt;#&lt;/a&gt; Running as an arbitrary user&lt;/h2&gt;
&lt;p&gt;If you know the permissions of your directory are already set appropriately (such as running against an existing database, as described above) or you have need of running  &lt;code&gt;mysqld&lt;/code&gt;  with a specific UID/GID, it is possible to invoke this image with  &lt;code&gt;--user&lt;/code&gt;  set to any value (other than  &lt;code&gt;root&lt;/code&gt; / &lt;code&gt;0&lt;/code&gt; ) in order to achieve the desired access/configuration:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ mkdir data
$ ls -lnd data
drwxr-xr-x 2 1000 1000 4096 Aug 27 15:54 data
$ docker run -v &amp;quot;$PWD/data&amp;quot;:/var/lib/mysql --user 1000:1000 --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;creating-database-dumps&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#creating-database-dumps&#34;&gt;#&lt;/a&gt; Creating database dumps&lt;/h2&gt;
&lt;p&gt;Most of the normal tools will work, although their usage might be a little convoluted in some cases to ensure they have access to the  &lt;code&gt;mysqld&lt;/code&gt;  server. A simple way to ensure this is to use  &lt;code&gt;docker exec&lt;/code&gt;  and run the tool from the same container, similar to the following:&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;exec&lt;/span&gt; some-mysql &lt;span class=&#34;token function&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;exec mysqldump --all-databases -uroot -p&#34;$MYSQL_ROOT_PASSWORD&#34;&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; /some/path/on/your/host/all-databases.sql&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;restoring-data-from-dump-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#restoring-data-from-dump-files&#34;&gt;#&lt;/a&gt; Restoring data from dump files&lt;/h2&gt;
&lt;p&gt;For restoring data. You can use  &lt;code&gt;docker exec&lt;/code&gt;  command with  &lt;code&gt;-i&lt;/code&gt;  flag, similar to the following:&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;exec&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-i&lt;/span&gt; some-mysql &lt;span class=&#34;token function&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;exec mysql -uroot -p&#34;$MYSQL_ROOT_PASSWORD&#34;&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; /some/path/on/your/host/all-databases.sql&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jove-2761781.github.io/blog/docker/commands/</guid>
            <title></title>
            <link>https://jove-2761781.github.io/blog/docker/commands/</link>
            <pubDate>Mon, 06 Feb 2023 16:21:40 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;commands&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#commands&#34;&gt;#&lt;/a&gt; Commands&lt;/h1&gt;
&lt;h4 id=&#34;docker-logs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#docker-logs&#34;&gt;#&lt;/a&gt; docker logs&lt;/h4&gt;
&lt;p&gt;查看日志&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; logs &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;container&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; logs &lt;span class=&#34;token parameter variable&#34;&gt;-f&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;container&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查看某段时间的日志&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; logs &lt;span class=&#34;token parameter variable&#34;&gt;-f&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-t&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--since&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;2022-08-12&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--tail&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;container&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;restart-policy&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#restart-policy&#34;&gt;#&lt;/a&gt; Restart Policy&lt;/h2&gt;
&lt;p&gt;To configure the restart policy for a container, use the  &lt;code&gt;--restart&lt;/code&gt;  flag when using the  &lt;code&gt;docker run&lt;/code&gt;  command. The value of the  &lt;code&gt;--restart&lt;/code&gt;  flag can be any of the following:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Flag&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;no&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do not automatically restart the container. (the default)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;on-failure[:max-retries]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Restart the container if it exits due to an error, which manifests as a non-zero exit code. Optionally, limit the number of times the Docker daemon attempts to restart the container using the  &lt;code&gt;:max-retries&lt;/code&gt;  option.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;always&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Always restart the container if it stops. If it is manually stopped, it is restarted only when Docker daemon restarts or the container itself is manually restarted. (See the second bullet listed in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vY29uZmlnL2NvbnRhaW5lcnMvc3RhcnQtY29udGFpbmVycy1hdXRvbWF0aWNhbGx5LyNyZXN0YXJ0LXBvbGljeS1kZXRhaWxz&#34;&gt;restart policy details&lt;/span&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unless-stopped&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Similar to  &lt;code&gt;always&lt;/code&gt; , except that when the container is stopped (manually or otherwise), it is not restarted even after Docker daemon restarts.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The following example starts a Redis container and configures it to always restart unless it is explicitly stopped or Docker is restarted.&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; run &lt;span class=&#34;token parameter variable&#34;&gt;-d&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--restart&lt;/span&gt; unless-stopped redis&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;This command changes the restart policy for an already running container named  &lt;code&gt;redis&lt;/code&gt; .&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; update &lt;span class=&#34;token parameter variable&#34;&gt;--restart&lt;/span&gt; unless-stopped redis&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;And this command will ensure all currently running containers will be restarted unless stopped.&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; update &lt;span class=&#34;token parameter variable&#34;&gt;--restart&lt;/span&gt; unless-stopped &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ps&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-q&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jove-2761781.github.io/blog/docker/install%20on%20Fedora/</guid>
            <title>Install on Fedora</title>
            <link>https://jove-2761781.github.io/blog/docker/install%20on%20Fedora/</link>
            <category term="Docker" scheme="https://jove-2761781.github.io/blog/categories/docker/" />
            <pubDate>Sun, 05 Feb 2023 22:25:33 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;install-on-fedora&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#install-on-fedora&#34;&gt;#&lt;/a&gt; Install on Fedora&lt;/h1&gt;
&lt;h4 id=&#34;uninstall-old-versions&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#uninstall-old-versions&#34;&gt;#&lt;/a&gt; Uninstall old versions&lt;/h4&gt;
&lt;p&gt;Older versions of Docker were called  &lt;code&gt;docker&lt;/code&gt;  or  &lt;code&gt;docker-engine&lt;/code&gt; . If these are installed, uninstall them, along with associated dependencies.&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; dnf remove &lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                  docker-client &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                  docker-client-latest &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                  docker-common &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                  docker-latest &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                  docker-latest-logrotate &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                  docker-logrotate &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                  docker-selinux &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                  docker-engine-selinux &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                  docker-engine&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;set-up-the-repository&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#set-up-the-repository&#34;&gt;#&lt;/a&gt; Set up the repository&lt;/h4&gt;
&lt;p&gt;Install the  &lt;code&gt;dnf-plugins-core&lt;/code&gt;  package (which provides the commands to manage your DNF repositories) and set up the repository.&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; dnf &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; dnf-plugins-core&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; dnf config-manager &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    --add-repo &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    https://download.docker.com/linux/fedora/docker-ce.repo&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;install-docker-engine&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#install-docker-engine&#34;&gt;#&lt;/a&gt; Install Docker Engine&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install the &lt;em&gt;latest version&lt;/em&gt; of Docker Engine, containerd, and Docker Compose or go to the next step to install a specific version:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; dnf &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; docker-ce docker-ce-cli containerd.io docker-compose-plugin&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;If prompted to accept the GPG key, verify that the fingerprint matches  &lt;code&gt;060A 61C5 1B55 8A7F 742B 77AA C52F EB6B 621E 9F35&lt;/code&gt; , and if so, accept it.&lt;/p&gt;
&lt;p&gt;This command installs Docker, but it doesn’t start Docker. It also creates a  &lt;code&gt;docker&lt;/code&gt;  group, however, it doesn’t add any users to the group by default.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To install a &lt;em&gt;specific version&lt;/em&gt; of Docker Engine, list the available versions in the repo, then select and install:&lt;/p&gt;
&lt;p&gt;a. List and sort the versions available in your repo. This example sorts results by version number, highest to lowest, and is truncated:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ dnf list docker-ce  &lt;span class=&#34;token parameter variable&#34;&gt;--showduplicates&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;docker-ce.x86_64  &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;:18.09.1-3.fc28                 docker-ce-stabledocker-ce.x86_64  &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;:18.09.0-3.fc28                 docker-ce-stabledocker-ce.x86_64  &lt;span class=&#34;token number&#34;&gt;18.06&lt;/span&gt;.1.ce-3.fc28                docker-ce-stabledocker-ce.x86_64  &lt;span class=&#34;token number&#34;&gt;18.06&lt;/span&gt;.0.ce-3.fc28                docker-ce-stable&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;The list returned depends on which repositories are enabled, and is specific to your version of Fedora (indicated by the  &lt;code&gt;.fc28&lt;/code&gt;  suffix in this example).&lt;/p&gt;
&lt;p&gt;b. Install a specific version by its fully qualified package name, which is the package name ( &lt;code&gt;docker-ce&lt;/code&gt; ) plus the version string (2nd column) up to the first hyphen, separated by a hyphen ( &lt;code&gt;-&lt;/code&gt; ), for example,  &lt;code&gt;docker-ce-3:18.09.1&lt;/code&gt; .&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; dnf &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; docker-ce-&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;VERSION_STRING&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; docker-ce-cli-&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;VERSION_STRING&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; containerd.io docker-compose-plugin&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;This command installs Docker, but it doesn’t start Docker. It also creates a  &lt;code&gt;docker&lt;/code&gt;  group, however, it doesn’t add any users to the group by default.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start Docker.&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl start &lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Verify that Docker Engine is installed correctly by running the  &lt;code&gt;hello-world&lt;/code&gt;  image.&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; run hello-world&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;This command downloads a test image and runs it in a container. When the container runs, it prints a message and exits.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This installs and runs Docker Engine. Use  &lt;code&gt;sudo&lt;/code&gt;  to run Docker commands. Continue to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vZW5naW5lL2luc3RhbGwvbGludXgtcG9zdGluc3RhbGwv&#34;&gt;Linux postinstall&lt;/span&gt; to allow non-privileged users to run Docker commands and for other optional configuration steps.&lt;/p&gt;
&lt;h4 id=&#34;uninstall-docker-engine&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#uninstall-docker-engine&#34;&gt;#&lt;/a&gt; Uninstall Docker Engine&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Uninstall the Docker Engine, CLI, Containerd, and Docker Compose packages:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; dnf remove docker-ce docker-ce-cli containerd.io docker-compose-plugin&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Images, containers, volumes, or customized configuration files on your host are not automatically removed. To delete all images, containers, and volumes:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-rf&lt;/span&gt; /var/lib/docker&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-rf&lt;/span&gt; /var/lib/containerd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You must delete any edited configuration files manually.&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jove-2761781.github.io/blog/hello-world/</guid>
            <title>Hello World</title>
            <link>https://jove-2761781.github.io/blog/hello-world/</link>
            <pubDate>Sun, 05 Feb 2023 19:42:07 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&#34;&gt;documentation&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&#34;&gt;troubleshooting&lt;/span&gt; or you can ask me on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&#34;&gt;GitHub&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hexo new &lt;span class=&#34;token string&#34;&gt;&#34;My New Post&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s&#34;&gt;Writing&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hexo server&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=&#34;&gt;Server&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hexo generate&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s&#34;&gt;Generating&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hexo deploy&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s&#34;&gt;Deployment&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
